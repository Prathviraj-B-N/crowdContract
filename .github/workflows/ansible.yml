name: Ansible deploy
# on: 
#   workflow_run:
#     workflows: ["testAndCreateDockerImage"]
#     types:
#       - completed

on:
 [push]
jobs:
  deploy_code:
    runs-on: ubuntu-latest
    steps:
      - name: Run Ansible playbook
        uses: dawidd6/action-ansible-playbook@v2.5.0
        with:
          playbook: /playbooks/ec2-provision.yml # path to your Ansible playbook
          directory: ./
          key: ${{ secrets.ANSIBLE_SSH_KEY }} # the ssh private key for ansible to use to connect to the servers, stored as "ansible_ssh_private_key" in the GitHub secrets
          inventory: ${{ secrets.ANSIBLE_VAULT_PASSWORD }} # the ansible inventory to use, stored as "ansible_inventory" in the GitHub secrets
          tags: create_ec2

  # notify:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Set up Python 3.7
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: 3.7
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install ansible==2.9.2 requests
  #       ansible-galaxy collection install amazon.aws
        
  #  - name: set ansible config secrets
  #    env:
  #      ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
  #      ANSIBLE_SSH_KEY: ${{ secrets.ANSIBLE_SSH_KEY }}
  #    run: |
  #      echo "$ANSIBLE_VAULT_PASSWORD" > .ansible-vault-password
  #      mkdir .ssh
  #      echo "$ANSIBLE_SSH_KEY" > .ssh/ansiblekey
  #      chmod 600 .ssh/ansiblekey
  #  - name: run playbook
  #    # env:
  #    #   DO_API_KEY: ${{ secrets.DO_API_KEY }}
  #    run: |
  #      ansible-playbook playbooks/ec2-provision.yml --ask-vault-pass --tags create_ec2
