---
name: GitHub Actions for crowdContract
run-name: ${{ github.actor }} has started using GitHub Actions ðŸš€
on:
  push:
    # paths:
    #   - 'client/**'
    branches:
      - main
      
jobs:
  build-frontend-push-img-to-Dockerhub:
    name: build dist for nginx container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: build frontend
        run: |
          cd client
          npm install
          npm run build
      - name: Archive /dist as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: client/dist
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: copy dist to . from Artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
        
      - name: build and push to DockerHub
        run: |
          docker buildx build --platform linux/amd64,linux/arm64/v8 --push --tag prathvirajbn/crowdcontract-frontend:latest ./client

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      
      - name: Run playbook
      - uses: actions/checkout@v3
      - uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          playbook: ec2-provision.yml
          # Optional, directory where playbooks live
          directory: playbooks
          # Optional, SSH private key
          # key: ${{secrets.SSH_PRIVATE_KEY}}
          # Optional, SSH known hosts file content
          # known_hosts: |
            # example.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
          # Optional, encrypted vault password
          vault_password: ${{secrets.VAULT_PASSWORD}}
          # Optional, galaxy requirements filepath
          #  requirements: galaxy-requirements.yml
          # Optional, additional flags to pass to ansible-playbook
          options: |
            --inventory hosts.yaml
