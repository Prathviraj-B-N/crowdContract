---
- hosts: local
  tasks:
    - name: Pull Docker image
      docker_image:
        name: prathvirajbn/crowdcontract-frontend
        tag: latest
        source: pull
    
    # - name: Pull Docker image server
    #   docker_image:
    #     name: prathvirajbn/crowdcontract-backend
    #     tag: latest
    #     source: pull

#     - name: Create Docker container
#       shell: "docker run -d -p 80:80 prathvirajbn/crowdcontract-frontend"
    
    # - name: Create Docker container server
    #   shell: "docker run -d -p 4002:4002 prathvirajbn/server"
    
#     - name: Check for Python
#       raw: test -e /usr/bin/python
#       changed_when: false
#       failed_when: false
#       register: check_python
    
#     - name: Install Python
#       raw: apt -y update && apt install -y python
#       when: check_python.rc != 0
    - name: install pre-requisites
      pip:
        name:
          - openshift
          - pyyaml
          - kubernetes 
    - name: Check
      shell: echo "{{ lookup('env', 'K8S_AUTH_KUBECONFIG')}}"
    - name: Get a list of all pods from any namespace
      environment:
        K8S_AUTH_KUBECONFIG: "{{ lookup('env', 'K8S_AUTH_KUBECONFIG')}}"
      kubernetes.core.k8s_info:
        kind: Service
        kubeconfig: "{{ lookup('env', 'K8S_AUTH_KUBECONFIG')}}"
      register: pod_list
    - name: Create a k8s namespace
      environment:
          K8S_AUTH_KUBECONFIG: "{{ lookup('env', 'K8S_AUTH_KUBECONFIG')}}"
      kubernetes.core.k8s:
        name: testing
        api_version: v1
        kind: Namespace
        state: present   
        kubeconfig: "{{ lookup('env', 'K8S_AUTH_KUBECONFIG')}}"
    - name: Create a Service object from an inline definition
      environment:
          K8S_AUTH_KUBECONFIG: "{{ lookup('env', 'K8S_AUTH_KUBECONFIG')}}"
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ lookup('env', 'K8S_AUTH_KUBECONFIG')}}"
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: web
            namespace: testing
            labels:
              app: galaxy
              service: web
          spec:
            selector:
              app: galaxy
              service: web
            ports:
            - protocol: TCP
              targetPort: 8000
              name: port-8000-tcp
              port: 8000


# For k8s
# python >= 3.6
# kubernetes >= 12.0.0
# PyYAML >= 3.11
# jsonpatch

